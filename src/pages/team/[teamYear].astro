---
// Team Page CSS
import "../../styles/teampage.css";

import fs from "node:fs/promises";
import type { InferGetStaticParamsType } from "astro";
import type {
    teamDataInterface,
    teamTitleInterface,
    subTeamInterface,
} from "../../components/team/types";
import PageLayout from "../../layouts/PageLayout.astro";
import TeamSection from "../../components/team/TeamSection.astro";

const teamTitles: teamTitleInterface = {
    core: { title: "Amazing Core", renderOrder: 0 },
    pdt: { title: "Product Development", renderOrder: 1 },
    tech: { title: "Tech", renderOrder: 2 },
    design: { title: "Design", renderOrder: 3 },
};

const getTeam = async (teamYear: string) => {
    const dir = `./public/assets/images/teams/team-${teamYear}`;
    const teamTypes = await fs.readdir(dir);
    let team = [];
    for (const teamType of teamTypes) {
        const file = `${dir}/${teamType}/members.json`;
        const data = await fs.readFile(file, "utf-8");
        const json: teamDataInterface = JSON.parse(data);
        json.data.forEach((member) => {
            //member is of type memberInterface
            if (member.src)
                member.src = `/assets/images/teams/team-${teamYear}/${teamType}/${member.src}`;
        });
        const subTeam: subTeamInterface = {
            title: teamTitles[teamType].title,
            renderOrder: teamTitles[teamType].renderOrder,
            members: json.data,
        };
        team.push(subTeam);
    }
    team.sort((a, b) => a.renderOrder - b.renderOrder);
    return team;
};

export const getStaticPaths = () => {
    const teamYears = ["2023", "2022", "2021", "2020", "2019", "2018", "2017"];
    return teamYears.map((teamYear) => {
        return { params: { teamYear } };
    });
};

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { teamYear } = Astro.params as Params;
const teamYearNum = Number(teamYear);
const headTitle = `Core Team ${teamYear} | ACM-DBIT`;
const description = `Core Team ${teamYear} . Our team consists of the best talents in the institute who are fully focused in delivering the best achievements in developing an amazing and technically advanced community of students in the campus.`;
const pageTitle = `Core Team ${teamYear} - ${teamYearNum + 1}`;

const team = await getTeam(teamYear);

const teamYears = ["2023", "2022", "2021", "2020", "2019", "2018", "2017"];
const prevYears = [];
for (let i = 1; i < 5; i++) {
    const temp = teamYearNum - i;
    if (teamYears.includes(temp.toString())) prevYears.push(temp);
}
---

<PageLayout
    headTitle={headTitle}
    description={description}
    canonical={"/team-" + teamYear}
    pageTitle={pageTitle}
    bannerBg="/assets/images/banner/banner2.jpg"
>
    <div class="content-block">
        <div class="section-area section-sp1">
            {
                team.map((subTeam) => {
                    return (
                        <TeamSection
                            members={subTeam.members}
                            title={subTeam.title}
                        />
                    );
                })
            }
        </div>
        <!-- Previous Team -->
        {
            prevYears.length > 0 && (
                <div class="container mb-5">
                    <div class="row">
                        <div class="col-md-12 heading-bx left">
                            <h2 class="title-head text-uppercase">
                                Previous <span>Teams</span>
                            </h2>
                        </div>
                    </div>
                    <div class="row">
                        {prevYears.map((year) => {
                            return (
                                <div class="col-md-2 col-xs my-2">
                                    <a href={"/team/" + year} class="btn">
                                        {year} - {year + 1}
                                    </a>
                                </div>
                            );
                        })}
                    </div>
                </div>
            )
        }
    </div>
</PageLayout>
